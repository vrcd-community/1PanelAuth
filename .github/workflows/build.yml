name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x86
          - os: ubuntu-latest
            runtime: linux-x64
          - os: ubuntu-latest
            runtime: linux-arm64
          - os: windows-latest
            runtime: win-x86
          - os: windows-latest
            runtime: win-x64
          - os: windows-latest
            runtime: win-arm64
          - os: macos-latest
            runtime: osx-x64
          - os: macos-latest
            runtime: osx-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ARM64 toolchain for Linux
        if: matrix.os == 'ubuntu-latest' && matrix.runtime == 'linux-arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ noble main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ noble-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ noble-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish
        run: dotnet publish --no-restore -r ${{ matrix.runtime }} -c Release -o ./app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.runtime }}
          path: ./app
